<?xml version="1.0"?>
<launch>

  <!-- points downsampler lidar top for localization-->
  <include file="$(find points_downsampler)/launch/points_downsample.launch">
    <arg name="node_name" value="voxel_grid_filter_1_0" />
    <arg name="points_topic" value="/lidar_top/points" />
    <arg name="voxel_leaf_size" value="1.0" />
    <arg name="points_topic_out" value="/filtered_points" />
  </include>

  <!-- points downsampler lidar top-->
  <include file="$(find points_downsampler)/launch/points_downsample.launch">
    <arg name="node_name" value="lidar_top_voxel_grid_filter" />
    <arg name="points_topic" value="/lidar_top/points" />
    <arg name="voxel_leaf_size" value="0.15" />
    <arg name="points_topic_out" value="/lidar_top/points_downsampled" />
  </include>

  <!-- points downsampler lidar front-->
  <include file="$(find points_downsampler)/launch/points_downsample.launch">
    <arg name="node_name" value="lidar_front_voxel_grid_filter" />
    <arg name="points_topic" value="/lidar_front/points" />
    <arg name="voxel_leaf_size" value="0.15" />
    <arg name="points_topic_out" value="/lidar_front/points_downsampled" />
  </include>

  <!-- points downsampler lidar middle left-->
  <include file="$(find points_downsampler)/launch/points_downsample.launch">
    <arg name="node_name" value="lidar_middle_left_voxel_grid_filter" />
    <arg name="points_topic" value="/lidar_middle_left/points" />
    <arg name="voxel_leaf_size" value="0.15" />
    <arg name="points_topic_out" value="/lidar_middle_left/points_downsampled" />
  </include>

  <!-- points downsampler lidar_middle_right -->
  <include file="$(find points_downsampler)/launch/points_downsample.launch">
    <arg name="node_name" value="lidar_middle_right_voxel_grid_filter" />
    <arg name="points_topic" value="/lidar_middle_right/points" />
    <arg name="voxel_leaf_size" value="0.15" />
    <arg name="points_topic_out" value="/lidar_middle_right/points_downsampled" />
  </include>


  <!-- points cropper lidar top-->
  <include file="$(find pcd_view_cropper)/launch/pcd_view_cropper.launch">
    <arg name="node_name" value="lidar_top_cropper_node" />
  	<arg name="points_topic_in" value="/lidar_top/points___" />
  	<arg name="points_topic_out" value="/lidar_top/points_cropped" />
  	<arg name="cropped_view_max_range" value="300.0" />
  	<arg name="cropped_view_max_height" value="50.0" />
    <arg name="output_log" value="false" />
    <arg name="cropping_method" value="box" />
    <arg name="box_min_point_x" value="-3.0" />
    <arg name="box_min_point_y" value="-1.0" />
    <arg name="box_min_point_z" value="-1.0" />
    <arg name="box_max_point_x" value="2.0" />
    <arg name="box_max_point_y" value="1.0" />
    <arg name="box_max_point_z" value="0.2" />
  </include>

  <!-- points cropper lidar middle left-->
  <include file="$(find pcd_view_cropper)/launch/pcd_view_cropper.launch">
    <arg name="node_name" value="lidar_middle_left_cropper_node" />
  	<arg name="points_topic_in" value="/lidar_middle_left/points___" />
  	<arg name="points_topic_out" value="/lidar_middle_left/points_cropped" />
  	<arg name="cropped_view_max_range" value="200.0" />
  	<arg name="cropped_view_max_height" value="50.0" />
    <arg name="output_log" value="false" />
    <arg name="cropping_method" value="box" />
    <arg name="box_min_point_x" value="-2.0" />
    <arg name="box_min_point_y" value="-2.0" />
    <arg name="box_min_point_z" value="-1.0" />
    <arg name="box_max_point_x" value="0.3" />
    <arg name="box_max_point_y" value="2.0" />
    <arg name="box_max_point_z" value="1.0" />
  </include>

  <!-- points cropper lidar middle right-->
  <include file="$(find pcd_view_cropper)/launch/pcd_view_cropper.launch">
    <arg name="node_name" value="lidar_middle_right_cropper_node" />
  	<arg name="points_topic_in" value="/lidar_middle_right/points___" />
  	<arg name="points_topic_out" value="/lidar_middle_right/points_cropped" />
  	<arg name="cropped_view_max_range" value="200.0" />
  	<arg name="cropped_view_max_height" value="50.0" />
    <arg name="output_log" value="false" />
    <arg name="cropping_method" value="box" />
    <arg name="box_min_point_x" value="-2.0" />
    <arg name="box_min_point_y" value="-2.0" />
    <arg name="box_min_point_z" value="-1.0" />
    <arg name="box_max_point_x" value="0.3" />
    <arg name="box_max_point_y" value="2.0" />
    <arg name="box_max_point_z" value="1.0" />
  </include>

  <!-- points cropper lidar middle right-->
  <include file="$(find points_preprocessor)/launch/points_concat_filter.launch">
    <arg name="input_topics" value="[/lidar_top/points_downsampled,/lidar_front/points_downsampled,/lidar_middle_left/points_downsampled,/lidar_middle_right/points_downsampled]" />
    <arg name="output_frame_id" value="base_link" />
    <arg name="output_topic" value="/lidar/points_raw" />
  </include>




    <!-- ray_ground_filter -->
  <arg name="base_frame" default="base_footprint" />  <!-- Coordinate system to perform transform (default base_link) -->
  <arg name="input_point_topic" default="/lidar_top/points" />  <!-- input_point_topic, ground filtering will be performed over the pointcloud in this topic. -->
  <arg name="clipping_height" default="2.0" />  <!-- Remove Points above this height value (default 2.0 meters) -->
  <arg name="min_point_distance" default="0.0" />  <!-- Removes Points closer than this distance from the sensor origin (default 1.85 meters) -->
  <arg name="radial_divider_angle" default="0.08" />  <!-- Angle of each Radial division on the XY Plane (default 0.08 degrees)-->
  <arg name="concentric_divider_distance" default="0.01" />  <!-- Distance of each concentric division on the XY Plane (default 0.0 meters) -->
  <arg name="local_max_slope" default="8" />  <!-- Max Slope of the ground between Points (default 8 degrees) -->
  <arg name="general_max_slope" default="5" />  <!-- Max Slope of the ground in the entire PointCloud, used when reclassification occurs (default 5 degrees)-->
  <arg name="min_height_threshold" default="0.05" />  <!-- Minimum height threshold between points (default 0.05 meters)-->
  <arg name="reclass_distance_threshold" default="0.2" />  <!-- Distance between points at which re classification will occur (default 0.2 meters)-->
  <arg name="no_ground_point_topic" default="/points_no_ground" />
  <arg name="ground_point_topic" default="/points_ground" />

  <!-- rosrun points_preprocessor ray_ground_filter -->
  <node pkg="points_preprocessor" type="ray_ground_filter" name="ray_ground_filter" output="screen">
    <param name="base_frame" value="$(arg base_frame)" />
    <param name="input_point_topic" value="$(arg input_point_topic)" />
    <param name="clipping_height" value="$(arg clipping_height)" />
    <param name="min_point_distance" value="$(arg min_point_distance)" />
    <param name="radial_divider_angle" value="$(arg radial_divider_angle)" />
    <param name="concentric_divider_distance" value="$(arg concentric_divider_distance)" />
    <param name="local_max_slope" value="$(arg local_max_slope)" />
    <param name="general_max_slope" value="$(arg general_max_slope)" />
    <param name="min_height_threshold" value="$(arg min_height_threshold)" />
    <param name="reclass_distance_threshold" value="$(arg reclass_distance_threshold)" />
    <param name="no_ground_point_topic" value="$(arg no_ground_point_topic)" />
    <param name="ground_point_topic" value="$(arg ground_point_topic)" />
  </node>

</launch>
